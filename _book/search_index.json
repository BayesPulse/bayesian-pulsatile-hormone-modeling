[
["index.html", "Bayesian Pulsatile Hormone Modeling with R Preface", " Bayesian Pulsatile Hormone Modeling with R Some subtitle Nichole E Carlson, Karen Liu, Matthew J Mulvahill, and Ken Horton 2017-06-23 Preface Hello world! "],
["introduction.html", "1 Introduction", " 1 Introduction "],
["development-plan.html", "2 Development Plan", " 2 Development Plan Algorithm incorporation Joint pulses covariates Population model covariates Modularization/refactoring Manual/webbook Package features Summary and diagnostic functions Summary and diagnostic functions mcmc_trace &lt;- function() {} mcmc_posteriors &lt;- function() {} mcmc_locations &lt;- function() {} STAN and other Bayesian R package functions to implement Posterior predicted values/plot rstanarm::posterior_predict() rstanarm::ppc_dens_overlay() rstanarm::ppc_intervals() Posterior densities rstanarm::mcmc_areas() #-------------------------------------------- # STAN examples # Some examples http://mc-stan.org/bayesplot/ #-------------------------------------------- library(bayesplot) library(rstanarm) library(ggplot2) fit &lt;- stan_glm(mpg ~ ., data = mtcars) ## ## SAMPLING FOR MODEL &#39;continuous&#39; NOW (CHAIN 1). ## ## Gradient evaluation took 2e-05 seconds ## 1000 transitions using 10 leapfrog steps per transition would take 0.2 seconds. ## Adjust your expectations accordingly! ## ## ## Iteration: 1 / 2000 [ 0%] (Warmup) ## Iteration: 200 / 2000 [ 10%] (Warmup) ## Iteration: 400 / 2000 [ 20%] (Warmup) ## Iteration: 600 / 2000 [ 30%] (Warmup) ## Iteration: 800 / 2000 [ 40%] (Warmup) ## Iteration: 1000 / 2000 [ 50%] (Warmup) ## Iteration: 1001 / 2000 [ 50%] (Sampling) ## Iteration: 1200 / 2000 [ 60%] (Sampling) ## Iteration: 1400 / 2000 [ 70%] (Sampling) ## Iteration: 1600 / 2000 [ 80%] (Sampling) ## Iteration: 1800 / 2000 [ 90%] (Sampling) ## Iteration: 2000 / 2000 [100%] (Sampling) ## ## Elapsed Time: 0.277957 seconds (Warm-up) ## 0.255797 seconds (Sampling) ## 0.533754 seconds (Total) ## ## ## SAMPLING FOR MODEL &#39;continuous&#39; NOW (CHAIN 2). ## ## Gradient evaluation took 1e-05 seconds ## 1000 transitions using 10 leapfrog steps per transition would take 0.1 seconds. ## Adjust your expectations accordingly! ## ## ## Iteration: 1 / 2000 [ 0%] (Warmup) ## Iteration: 200 / 2000 [ 10%] (Warmup) ## Iteration: 400 / 2000 [ 20%] (Warmup) ## Iteration: 600 / 2000 [ 30%] (Warmup) ## Iteration: 800 / 2000 [ 40%] (Warmup) ## Iteration: 1000 / 2000 [ 50%] (Warmup) ## Iteration: 1001 / 2000 [ 50%] (Sampling) ## Iteration: 1200 / 2000 [ 60%] (Sampling) ## Iteration: 1400 / 2000 [ 70%] (Sampling) ## Iteration: 1600 / 2000 [ 80%] (Sampling) ## Iteration: 1800 / 2000 [ 90%] (Sampling) ## Iteration: 2000 / 2000 [100%] (Sampling) ## ## Elapsed Time: 0.260137 seconds (Warm-up) ## 0.237618 seconds (Sampling) ## 0.497755 seconds (Total) ## ## ## SAMPLING FOR MODEL &#39;continuous&#39; NOW (CHAIN 3). ## ## Gradient evaluation took 9e-06 seconds ## 1000 transitions using 10 leapfrog steps per transition would take 0.09 seconds. ## Adjust your expectations accordingly! ## ## ## Iteration: 1 / 2000 [ 0%] (Warmup) ## Iteration: 200 / 2000 [ 10%] (Warmup) ## Iteration: 400 / 2000 [ 20%] (Warmup) ## Iteration: 600 / 2000 [ 30%] (Warmup) ## Iteration: 800 / 2000 [ 40%] (Warmup) ## Iteration: 1000 / 2000 [ 50%] (Warmup) ## Iteration: 1001 / 2000 [ 50%] (Sampling) ## Iteration: 1200 / 2000 [ 60%] (Sampling) ## Iteration: 1400 / 2000 [ 70%] (Sampling) ## Iteration: 1600 / 2000 [ 80%] (Sampling) ## Iteration: 1800 / 2000 [ 90%] (Sampling) ## Iteration: 2000 / 2000 [100%] (Sampling) ## ## Elapsed Time: 0.265038 seconds (Warm-up) ## 0.257703 seconds (Sampling) ## 0.522741 seconds (Total) ## ## ## SAMPLING FOR MODEL &#39;continuous&#39; NOW (CHAIN 4). ## ## Gradient evaluation took 1e-05 seconds ## 1000 transitions using 10 leapfrog steps per transition would take 0.1 seconds. ## Adjust your expectations accordingly! ## ## ## Iteration: 1 / 2000 [ 0%] (Warmup) ## Iteration: 200 / 2000 [ 10%] (Warmup) ## Iteration: 400 / 2000 [ 20%] (Warmup) ## Iteration: 600 / 2000 [ 30%] (Warmup) ## Iteration: 800 / 2000 [ 40%] (Warmup) ## Iteration: 1000 / 2000 [ 50%] (Warmup) ## Iteration: 1001 / 2000 [ 50%] (Sampling) ## Iteration: 1200 / 2000 [ 60%] (Sampling) ## Iteration: 1400 / 2000 [ 70%] (Sampling) ## Iteration: 1600 / 2000 [ 80%] (Sampling) ## Iteration: 1800 / 2000 [ 90%] (Sampling) ## Iteration: 2000 / 2000 [100%] (Sampling) ## ## Elapsed Time: 0.258129 seconds (Warm-up) ## 0.25501 seconds (Sampling) ## 0.513139 seconds (Total) posterior &lt;- as.matrix(fit) plot_title &lt;- ggtitle(&quot;Posterior distributions with medians and 80% intervals&quot;) mcmc_areas(posterior, pars = c(&quot;cyl&quot;, &quot;drat&quot;, &quot;am&quot;, &quot;wt&quot;), prob = 0.8) + plot_title ppc_intervals(y = mtcars$mpg, yrep = posterior_predict(fit), x = mtcars$wt, prob = 0.5) + labs(x = &quot;Weight (1000 lbs)&quot;, y = &quot;MPG&quot;, title = &quot;50% posterior predictive intervals \\nvs observed miles per gallon&quot;, subtitle = &quot;by vehicle weight&quot;) + panel_bg(fill = &quot;gray95&quot;, color = NA) + grid_lines(color = &quot;white&quot;) "]
]
